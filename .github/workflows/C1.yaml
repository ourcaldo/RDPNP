# MAIN Ubuntu + ngrok (SSH) Workflow
# Description:
# This workflow automates the setup of an Ubuntu runner,
# enables SSH, installs necessary dependencies,
# and starts an ngrok TCP tunnel for SSH access.
#
# Author: ourcaldo@gmail.com
#
# Version: 1.0
# Date: 2025-09-21

name: Main Ubuntu C1

on:
  workflow_dispatch:

jobs:
  build:
    if: github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 350

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Update & install packages
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends openssh-server curl unzip jq
        sudo systemctl enable --now ssh
      shell: bash

    - name: Set password for runner user
      run: echo "runner:P@ssw0rd!" | sudo chpasswd
      shell: bash

    - name: Configure SSH to allow password login
      run: |
        sudo sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
        sudo sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
        sudo systemctl restart ssh
      shell: bash

    - name: Download ngrok
      run: |
        curl -sSL https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz -o ngrok.tgz
        tar -xzf ngrok.tgz
        sudo mv ngrok /usr/local/bin/ngrok
        sudo chmod +x /usr/local/bin/ngrok
        ngrok version
      shell: bash

    - name: Create ngrok config file
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        mkdir -p ~/.ngrok2
        cat > ~/.ngrok2/ngrok.yml <<EOF
authtoken: ${NGROK_AUTH_TOKEN}
tunnels:
  ssh:
    proto: tcp
    addr: 22
EOF
      shell: bash

    - name: Start ngrok tunnel
      run: |
        nohup ngrok start --config ~/.ngrok2/ngrok.yml ssh > ngrok.log 2>&1 &
        sleep 10
        echo "Ngrok tunnel initialized"
      shell: bash

    - name: Show ngrok endpoint (host:port)
      run: |
        API_JSON=$(curl -sS http://127.0.0.1:4040/api/tunnels)
        PUBLIC_URL=$(echo "$API_JSON" | jq -r '.tunnels[]?.public_url' | grep '^tcp://')
        HOSTPORT=${PUBLIC_URL#tcp://}
        HOST=$(echo "$HOSTPORT" | cut -d: -f1)
        PORT=$(echo "$HOSTPORT" | cut -d: -f2)
        echo "SSH endpoint ready:"
        echo "ssh runner@${HOST} -p ${PORT}"
        echo "Password: P@ssw0rd!"
      shell: bash

    - name: Wait before next redeploy (5h30m)
      run: sleep 19800
      shell: bash

    - name: Mark workflow as successful
      run: echo "Success!"
      shell: bash

    - name: Re-dispatch workflow
      env:
        PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      run: |
        curl -X POST \
          -H "Authorization: token ${PERSONAL_TOKEN}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"event_type":"Main Ubuntu C1"}' \
          "https://api.github.com/repos/${{ github.repository }}/dispatches"
      shell: bash
