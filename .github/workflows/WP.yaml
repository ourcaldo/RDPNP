name: Deploy WordPress with Backup and UpdraftPlus

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Install Apache, PHP, and Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y apache2 php php-mysql libapache2-mod-php unzip curl jq mysql-client

    - name: Set PHP Limits
      run: |
        sudo sed -i 's/memory_limit = .*/memory_limit = 2048M/' /etc/php/*/apache2/php.ini
        sudo sed -i 's/upload_max_filesize = .*/upload_max_filesize = 2048M/' /etc/php/*/apache2/php.ini
        sudo sed -i 's/post_max_size = .*/post_max_size = 2048M/' /etc/php/*/apache2/php.ini
        sudo sed -i 's/max_execution_time = .*/max_execution_time = 300/' /etc/php/*/apache2/php.ini
        sudo sed -i 's/max_input_time = .*/max_input_time = 300/' /etc/php/*/apache2/php.ini
        sudo a2enmod rewrite
        sudo systemctl restart apache2

    - name: Install WordPress
      run: |
        wget https://wordpress.org/latest.zip
        unzip latest.zip
        sudo cp -r wordpress/* /var/www/html/
        sudo chown -R www-data:www-data /var/www/html/
        sudo chmod -R 755 /var/www/html/
        sudo cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php

    - name: Generate Random Database Name
      id: generate_db
      run: |
        DB_NAME="wordpress_$(openssl rand -hex 6)"
        echo "Random Database Name: $DB_NAME"
        echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV

    - name: Create Random Database on Remote MySQL
      run: |
        mysql -h nexdb-nexus88.d.aivencloud.com -P 28185 -u avnadmin -p${{ secrets.AVN_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME};"
        echo "Database '$DB_NAME' created successfully."

    - name: Configure wp-config.php for Remote MySQL
      run: |
        # Update wp-config.php with correct remote MySQL connection details
        sudo sed -i "s/database_name_here/${DB_NAME}/" /var/www/html/wp-config.php
        sudo sed -i "s/username_here/avnadmin/" /var/www/html/wp-config.php
        sudo sed -i "s/password_here/${{ secrets.AVN_PASSWORD }}/" /var/www/html/wp-config.php
        echo "define('DB_HOST', 'nexdb-nexus88.d.aivencloud.com:28185');" | sudo tee -a /var/www/html/wp-config.php
        echo "define('MYSQL_CLIENT_FLAGS', MYSQLI_CLIENT_SSL);" | sudo tee -a /var/www/html/wp-config.php
        echo "define('DB_SSL_KEY', '/tmp/client-key.pem');" | sudo tee -a /var/www/html/wp-config.php
        echo "define('DB_SSL_CERT', '/tmp/client-cert.pem');" | sudo tee -a /var/www/html/wp-config.php
        echo "define('DB_SSL_CA', '/tmp/ca.pem');" | sudo tee -a /var/www/html/wp-config.php

    - name: Save Remote SSL Certificate
      run: |
        echo "${{ secrets.AIVEN_CA_CERT }}" > /tmp/ca.pem

    - name: Trigger WordPress Installation (First Run)
      run: |
        # Simulate the first run by accessing WordPress setup
        curl -s -o /dev/null -w "%{http_code}" http://localhost/wp-admin/install.php?step=1

    - name: Install UpdraftPlus Plugin
      run: |
        cd /var/www/html/wp-content/plugins/
        sudo wget https://nexstorage.b-cdn.net/updraftplus-2.25.5.26.zip
        sudo unzip updraftplus-2.25.5.26.zip
        sudo chown -R www-data:www-data updraftplus

    - name: Create Updraft Folder and Download Backup Files
      run: |
        sudo mkdir -p /var/www/html/wp-content/updraft
        cd /var/www/html/wp-content/updraft
        for part in plugins plugins2 plugins3 plugins4 themes uploads uploads2 uploads3 uploads4 uploads5 uploads6 uploads7 uploads8 uploads9 uploads10 uploads11 uploads12; do
          sudo wget https://nexstorage.b-cdn.net/backup_2025-05-09-2116_CETTA_30a1d6969066-$part.zip
        done
        sudo wget https://nexstorage.b-cdn.net/backup_2025-05-09-2116_CETTA_30a1d6969066-db.gz
        sudo chown -R www-data:www-data /var/www/html/wp-content/updraft

    - name: Remove Apache Default Index
      run: |
        sudo rm -f /var/www/html/index.html

    - name: Install Ngrok
      run: |
        curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz -o ngrok.tgz
        tar -xzf ngrok.tgz
        chmod +x ngrok
        sudo mv ngrok /usr/local/bin

    - name: Create Ngrok Config
      run: |
        mkdir -p ~/.ngrok2
        echo -e "version: 2\nauthtoken: ${{ secrets.NGROK_AUTH_TOKEN }}\ntunnels:\n  wordpress:\n    proto: http\n    addr: 80\n    domain: hip-specially-escargot.ngrok-free.app" > ~/.ngrok2/ngrok.yml

    - name: Start Ngrok Tunnel
      run: |
        nohup ngrok start --all --config ~/.ngrok2/ngrok.yml > ngrok.log &
        sleep 10

    - name: Display Ngrok Public URL
      run: |
        curl -s http://localhost:4040/api/tunnels | jq '.tunnels[] | {name, public_url}'

    - name: Keep Runner Alive for 6 Hours
      run: |
        echo "Ngrok is running. Keeping the runner alive for 6 hours..."
        tail -f /dev/null
